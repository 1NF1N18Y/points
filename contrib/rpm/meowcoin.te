policy_module(points, 1.100.1)

########################################
#
# Declarations
#

type points_t;
type points_exec_t;
init_daemon_domain(points_t, points_exec_t)

permissive points_t;

type points_initrc_exec_t;
init_script_file(points_initrc_exec_t)

type points_conf_t;
files_type(points_conf_t)

type points_var_lib_t;
files_type(points_var_lib_t)

type points_var_run_t;
files_type(points_var_run_t)

type points_port_t;
corenet_port(points_port_t)

########################################
#
# points local policy
#
allow points_t self:process { fork };

allow points_t self:fifo_file rw_fifo_file_perms;
allow points_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(points_t, points_conf_t, points_conf_t)
manage_files_pattern(points_t, points_conf_t, points_conf_t)

manage_dirs_pattern(points_t, points_var_lib_t, points_var_lib_t)
manage_files_pattern(points_t, points_var_lib_t, points_var_lib_t)
files_var_lib_filetrans(points_t, points_var_lib_t, { dir file })

manage_dirs_pattern(points_t, points_var_run_t, points_var_run_t)
manage_files_pattern(points_t, points_var_run_t, points_var_run_t)

sysnet_dns_name_resolve(points_t)
corenet_all_recvfrom_unlabeled(points_t)

allow points_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(points_t)
corenet_tcp_sendrecv_generic_node(points_t)
corenet_tcp_sendrecv_all_ports(points_t)
corenet_tcp_bind_generic_node(points_t)

gen_require(`
    type points_port_t;
')
allow points_t points_port_t:tcp_socket name_bind;

gen_require(`
    type points_port_t;
')
allow points_t points_port_t:tcp_socket name_connect;

domain_use_interactive_fds(points_t)

files_read_etc_files(points_t)

miscfiles_read_localization(points_t)

sysnet_dns_name_resolve(points_t)

allow points_t points_exec_t:file execute_no_trans;
allow points_t self:process setsched;
corecmd_exec_ls(points_t)
corenet_tcp_connect_http_port(points_t)
dev_read_urand(points_t)
fs_getattr_xattr_fs(points_t)
kernel_read_system_state(points_t)
