#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/points/.points" ]; then
	POINTSD_DEFAULT_DATADIR="/var/lib/points/.points"
else
	POINTSD_DEFAULT_DATADIR="/var/lib/pointsd"
fi

POINTSD_CONFIGFILE=${POINTSD_CONFIGFILE:-/etc/points/points.conf}
POINTSD_PIDDIR=${POINTSD_PIDDIR:-/var/run/pointsd}
POINTSD_PIDFILE=${POINTSD_PIDFILE:-${POINTSD_PIDDIR}/pointsd.pid}
POINTSD_DATADIR=${POINTSD_DATADIR:-${POINTSD_DEFAULT_DATADIR}}
POINTSD_USER=${POINTSD_USER:-${MEOWCOIN_USER:-points}}
POINTSD_GROUP=${POINTSD_GROUP:-points}
POINTSD_BIN=${POINTSD_BIN:-/usr/bin/pointsd}
POINTSD_NICE=${POINTSD_NICE:-${NICELEVEL:-0}}
POINTSD_OPTS="${POINTSD_OPTS:-${MEOWCOIN_OPTS}}"

name="Points Core Daemon"
description="Points cryptocurrency P2P network daemon"

command="/usr/bin/pointsd"
command_args="-pid=\"${POINTSD_PIDFILE}\" \
		-conf=\"${POINTSD_CONFIGFILE}\" \
		-datadir=\"${POINTSD_DATADIR}\" \
		-daemon \
		${POINTSD_OPTS}"

required_files="${POINTSD_CONFIGFILE}"
start_stop_daemon_args="-u ${POINTSD_USER} \
			-N ${POINTSD_NICE} -w 2000"
pidfile="${POINTSD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${POINTSD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${POINTSD_USER}:${POINTSD_GROUP}" \
	"${POINTSD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${POINTSD_USER}:${POINTSD_GROUP}" \
	"${POINTSD_PIDDIR}"

	checkpath -f \
	-o ${POINTSD_USER}:${POINTSD_GROUP} \
	-m 0660 \
	${POINTSD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${POINTSD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run pointsd."
		eerror "The setting must appear in ${POINTSD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Points Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
